<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>springboot+Vue3项目总结</title>
      <link href="/2025/01/07/springboot-Vue3%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
      <url>/2025/01/07/springboot-Vue3%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="创建springboot-Vue项目"><a href="#创建springboot-Vue项目" class="headerlink" title="创建springboot+Vue项目"></a>创建springboot+Vue项目</h2><p><strong>1、创建springboot项目</strong></p><img decoding="async" src="https://pic1.imgdb.cn/item/677d3a8dd0e0a243d4f170f7.png" width="100%"><p><strong>2、准备数据表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">-- 创建数据库</span><br><span class="line">create database big_event;</span><br><span class="line"></span><br><span class="line">-- 使用数据库</span><br><span class="line">use big_event;</span><br><span class="line"></span><br><span class="line">-- 用户表</span><br><span class="line">create table user (</span><br><span class="line">                      id int unsigned primary key auto_increment comment &#x27;ID&#x27;,</span><br><span class="line">                      username varchar(20) not null unique comment &#x27;用户名&#x27;,</span><br><span class="line">                      password varchar(32)  comment &#x27;密码&#x27;,</span><br><span class="line">                      nickname varchar(10)  default &#x27;&#x27; comment &#x27;昵称&#x27;,</span><br><span class="line">                      email varchar(128) default &#x27;&#x27; comment &#x27;邮箱&#x27;,</span><br><span class="line">                      user_pic varchar(128) default &#x27;&#x27; comment &#x27;头像&#x27;,</span><br><span class="line">                      create_time datetime not null comment &#x27;创建时间&#x27;,</span><br><span class="line">                      update_time datetime not null comment &#x27;修改时间&#x27;</span><br><span class="line">) comment &#x27;用户表&#x27;;</span><br><span class="line"></span><br><span class="line">-- 分类表</span><br><span class="line">create table category(</span><br><span class="line">                         id int unsigned primary key auto_increment comment &#x27;ID&#x27;,</span><br><span class="line">                         category_name varchar(32) not null comment &#x27;分类名称&#x27;,</span><br><span class="line">                         category_alias varchar(32) not null comment &#x27;分类别名&#x27;,</span><br><span class="line">                         create_user int unsigned not null comment &#x27;创建人ID&#x27;,</span><br><span class="line">                         create_time datetime not null comment &#x27;创建时间&#x27;,</span><br><span class="line">                         update_time datetime not null comment &#x27;修改时间&#x27;,</span><br><span class="line">                         constraint fk_category_user foreign key (create_user) references user(id) -- 外键约束</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 文章表</span><br><span class="line">create table article(</span><br><span class="line">                        id int unsigned primary key auto_increment comment &#x27;ID&#x27;,</span><br><span class="line">                        title varchar(30) not null comment &#x27;文章标题&#x27;,</span><br><span class="line">                        content varchar(10000) not null comment &#x27;文章内容&#x27;,</span><br><span class="line">                        cover_img varchar(128) not null  comment &#x27;文章封面&#x27;,</span><br><span class="line">                        state varchar(3) default &#x27;草稿&#x27; comment &#x27;文章状态: 只能是[已发布] 或者 [草稿]&#x27;,</span><br><span class="line">                        category_id int unsigned comment &#x27;文章分类ID&#x27;,</span><br><span class="line">                        create_user int unsigned not null comment &#x27;创建人ID&#x27;,</span><br><span class="line">                        create_time datetime not null comment &#x27;创建时间&#x27;,</span><br><span class="line">                        update_time datetime not null comment &#x27;修改时间&#x27;,</span><br><span class="line">                        constraint fk_article_category foreign key (category_id) references category(id),-- 外键约束</span><br><span class="line">                        constraint fk_article_user foreign key (create_user) references user(id) -- 外键约束</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>3、创建Springboot工程，引入对应的依赖(web、mybatis、mysql驱动)</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jjq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>big-event<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>big-event<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  web依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    mybatis依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    mysql驱动依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.33<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>4、配置文件application.yml中引入mybatis的配置信息</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/big_event</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">jinjiaqi123</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>5、创建包结构并准备实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Article</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;<span class="comment">//主键ID</span></span><br><span class="line">    <span class="keyword">private</span> String title;<span class="comment">//文章标题</span></span><br><span class="line">    <span class="keyword">private</span> String content;<span class="comment">//文章内容</span></span><br><span class="line">    <span class="keyword">private</span> String coverImg;<span class="comment">//封面图像</span></span><br><span class="line">    <span class="keyword">private</span> String state;<span class="comment">//发布状态 已发布|草稿</span></span><br><span class="line">    <span class="keyword">private</span> Integer categoryId;<span class="comment">//文章分类id</span></span><br><span class="line">    <span class="keyword">private</span> Integer createUser;<span class="comment">//创建人ID</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;<span class="comment">//创建时间</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;<span class="comment">//更新时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Category</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;<span class="comment">//主键ID</span></span><br><span class="line">    <span class="keyword">private</span> String categoryName;<span class="comment">//分类名称</span></span><br><span class="line">    <span class="keyword">private</span> String categoryAlias;<span class="comment">//分类别名</span></span><br><span class="line">    <span class="keyword">private</span> Integer createUser;<span class="comment">//创建人ID</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;<span class="comment">//创建时间</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;<span class="comment">//更新时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;<span class="comment">//主键ID</span></span><br><span class="line">    <span class="keyword">private</span> String username;<span class="comment">//用户名</span></span><br><span class="line">    <span class="keyword">private</span> String password;<span class="comment">//密码</span></span><br><span class="line">    <span class="keyword">private</span> String nickname;<span class="comment">//昵称</span></span><br><span class="line">    <span class="keyword">private</span> String email;<span class="comment">//邮箱</span></span><br><span class="line">    <span class="keyword">private</span> String userPic;<span class="comment">//用户头像地址</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;<span class="comment">//创建时间</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;<span class="comment">//更新时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a><strong>开发流程</strong></h2><p><strong>1明确需求</strong><br><strong>2阅读接口文档</strong><br><strong>3思路分析</strong><br><strong>4开发</strong><br><strong>5测试</strong></p><h2 id="用户相关"><a href="#用户相关" class="headerlink" title="用户相关"></a>用户相关</h2><img decoding="async" src="https://pic1.imgdb.cn/item/677d3d97d0e0a243d4f17270.png" width="100%"><p><strong>6、编写Result实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.jjq.pojo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统一响应结果</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer code;<span class="comment">//业务状态码  0-成功  1-失败</span></span><br><span class="line">    <span class="keyword">private</span> String message;<span class="comment">//提示信息</span></span><br><span class="line">    <span class="keyword">private</span> T data;<span class="comment">//响应数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//快速返回操作成功响应结果(带响应数据)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt; Result&lt;E&gt; <span class="title function_">success</span><span class="params">(E data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(<span class="number">0</span>, <span class="string">&quot;操作成功&quot;</span>, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//快速返回操作成功响应结果</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">0</span>, <span class="string">&quot;操作成功&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">error</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">1</span>, message, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>7、编写Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.jjq.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jjq.pojo.Result;</span><br><span class="line"><span class="keyword">import</span> org.jjq.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.jjq.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">register</span><span class="params">(String username,String password)</span>&#123;</span><br><span class="line">        <span class="comment">//查询用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> userService.findByUserName(username);</span><br><span class="line">        <span class="comment">//判断是否存在用户</span></span><br><span class="line">        <span class="keyword">if</span> (u==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//没有占用</span></span><br><span class="line">            <span class="comment">//注册</span></span><br><span class="line">            userService.register(username,password);</span><br><span class="line">            <span class="keyword">return</span> Result.success();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//占用</span></span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;用户名已被占用&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>8编写UserService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.jjq.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> org.jjq.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="comment">//根据用户名查询用户</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where username=#&#123;username&#125;&quot;)</span></span><br><span class="line">    User <span class="title function_">findByUserName</span><span class="params">(String username)</span>;</span><br><span class="line">    <span class="comment">//添加用户</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into user(username,password,create_time,update_time)&quot;+</span></span><br><span class="line"><span class="meta">            &quot;values(#&#123;username&#125;,#&#123;password&#125;,now(),now())&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String username, String password)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>9编写Service实现层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.jjq.service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jjq.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> org.jjq.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.jjq.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.jjq.utils.Md5Util;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">findByUserName</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> userMapper.findByUserName(username);</span><br><span class="line">        <span class="keyword">return</span> u;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(String username, String password)</span> &#123;</span><br><span class="line">        <span class="comment">//加密密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">md5String</span> <span class="operator">=</span> Md5Util.getMD5String(password);</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line">        userMapper.add(username,md5String);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>10编写UserMapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.jjq.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> org.jjq.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="comment">//根据用户名查询用户</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where username=#&#123;username&#125;&quot;)</span></span><br><span class="line">    User <span class="title function_">findByUserName</span><span class="params">(String username)</span>;</span><br><span class="line">    <span class="comment">//添加用户</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into user(username,password,create_time,update_time)&quot;+</span></span><br><span class="line"><span class="meta">            &quot;values(#&#123;username&#125;,#&#123;password&#125;,now(),now())&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String username, String password)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>11运行SpringBoot并在postman中进行测试</p><img decoding="async" src="https://pic1.imgdb.cn/item/677d3e81d0e0a243d4f172e1.png" width="100%"><p>测试成功数据库中出现测试的数据就表示用户查询和注册功能已经完成了</p><p><strong>12参数校验</strong></p><p> 传统方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/register&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">register</span><span class="params">(String username,String password)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(username!=<span class="literal">null</span>&amp;&amp;username.length()&gt;=<span class="number">5</span>&amp;&amp;username.length()&lt;=<span class="number">16</span>&amp;&amp;</span><br><span class="line">        password!=<span class="literal">null</span>&amp;&amp;password.length()&gt;=<span class="number">5</span>&amp;&amp;password.length()&lt;=<span class="number">16</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//查询用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> userService.findByUserName(username);</span><br><span class="line">        <span class="comment">//判断是否存在用户</span></span><br><span class="line">        <span class="keyword">if</span> (u==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//没有占用</span></span><br><span class="line">            <span class="comment">//注册</span></span><br><span class="line">            userService.register(username,password);</span><br><span class="line">            <span class="keyword">return</span> Result.success();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//占用</span></span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;用户名已被占用&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;参数不合法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> <strong>Spring Validation</strong></p><p>Spring提供的一个参数校验框架，使用预定义的注解完成参数校验</p><p>1、引入Spring Validation依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--validation--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、在参数前面添加@Pattern注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Result <span class="title function_">register</span><span class="params">(<span class="meta">@Pattern(regexp = &quot;^\\S&#123;5,16&#125;$&quot;)</span> </span></span><br><span class="line"><span class="params">                       String username,</span></span><br><span class="line"><span class="params">                       <span class="meta">@Pattern(regexp = &quot;^\\S&#123;5,16&#125;$&quot;)</span>  </span></span><br><span class="line"><span class="params">                       String password)</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、在Controller类上添加@Validation注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Validated</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>参数校验失败异常处理</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">handleException</span><span class="params">(Exception e)</span>&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> Result.error(StringUtils.hasLength(e.getMessage())? e.getMessage():<span class="string">&quot;操作失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img decoding="async" src="https://pic1.imgdb.cn/item/677d3f78d0e0a243d4f17361.png" width="100%"><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><h4 id="2-1、登录功能"><a href="#2-1、登录功能" class="headerlink" title="2.1、登录功能"></a>2.1、登录功能</h4><p>编写Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">login</span><span class="params">(<span class="meta">@Pattern(regexp = &quot;^\\S&#123;5,16&#125;$&quot;)</span> String username,<span class="meta">@Pattern(regexp = &quot;^\\S&#123;5,16&#125;$&quot;)</span> String password)</span>&#123;</span><br><span class="line">        <span class="comment">//根据用户名查询用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.findByUserName(username);</span><br><span class="line">        <span class="comment">//判断该用户是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (loginUser==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;用户名错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断密码是否正确，loginUser对象中的的password是密文</span></span><br><span class="line">        <span class="keyword">if</span> (Md5Util.getMD5String(password).equals(loginUser.getPassword()))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.success(<span class="string">&quot;JWT token令牌&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编写异常处理器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.jjq.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jjq.pojo.Result;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestControllerAdvice;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">handleException</span><span class="params">(Exception e)</span>&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> Result.error(StringUtils.hasLength(e.getMessage())? e.getMessage():<span class="string">&quot;操作失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>在postman中测试</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 0,</span><br><span class="line">    &quot;message&quot;: &quot;操作成功&quot;,</span><br><span class="line">    &quot;data&quot;: &quot;JWT token令牌&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2、登录认证"><a href="#2-2、登录认证" class="headerlink" title="2.2、登录认证"></a>2.2、登录认证</h4><p><strong>令牌：</strong>令牌就是一段字符串</p><ul><li>承载业务数据，减少后续请求查询数据库的次数</li><li>防篡改，保证信息的合法性和有效性</li></ul><p><strong>JWT：</strong></p><p>简介·：</p><ul><li>全称：JSON Web Token(<a href="https://jwt.io/">https://jwt.io/</a>)</li><li>定义了一种简介的、自包含的格式，用于通信双方以json数据格式安全的传输信息</li><li>组成<ul><li>第一部分：Header（头），记录令牌类型、签名算法等。例如：{“alg”:HS256,“type”:“JWT”}</li><li>第二部分：Payload（有效载荷），携带一些自定义信息，默认信息等。例如：{“id”:1,“username”:“Tom”}</li><li>第三部分：Signature（签名），防止Token被篡改、确保安全性。将header、payload，并加入指定秘钥，通过指定签名算法计算而来</li></ul></li></ul><img decoding="async" src="https://pic1.imgdb.cn/item/677d40b6d0e0a243d4f173e2.png" width="100%"><p>JWT-生成：</p><p>在Maven中引入JWT</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--jwt--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.auth0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--单元测试的坐标--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>JWT校验时使用的签名秘钥，必须和生成JWT令牌时使用的秘钥是配套的</li><li>如果JWT令牌解析校验时报错，则说明JWT令牌被篡改或失效了，令牌非法</li></ul><p>导入工具类JwtUtil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.jjq.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWT;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.algorithms.Algorithm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">KEY</span> <span class="operator">=</span> <span class="string">&quot;iloveyou&quot;</span>;</span><br><span class="line"><span class="comment">//接收业务数据,生成token并返回</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">genToken</span><span class="params">(Map&lt;String, Object&gt; claims)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JWT.create()</span><br><span class="line">                .withClaim(<span class="string">&quot;claims&quot;</span>, claims)</span><br><span class="line">                .withExpiresAt(<span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis() + <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">12</span>))</span><br><span class="line">                .sign(Algorithm.HMAC256(KEY));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接收token,验证token,并返回业务数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title function_">parseToken</span><span class="params">(String token)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JWT.require(Algorithm.HMAC256(KEY))</span><br><span class="line">                .build()</span><br><span class="line">                .verify(token)</span><br><span class="line">                .getClaim(<span class="string">&quot;claims&quot;</span>)</span><br><span class="line">                .asMap();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在Controller文件夹下创建ArticleController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/article&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArticleController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//验证token</span></span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="string">&quot;所有文章的数据&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建拦截器LoginInterceptor</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//令牌验证</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;Authorization&quot;</span>);</span><br><span class="line">        <span class="comment">//验证token</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Map&lt;String, Object&gt; claims = JwtUtil.parseToken(token);</span><br><span class="line">            <span class="comment">//放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            <span class="comment">//http响应状态码为401</span></span><br><span class="line">            response.setStatus(<span class="number">401</span>);</span><br><span class="line">            <span class="comment">//不放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建config文件夹并且创建WebConfig类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginInterceptor loginInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">//登录接口和注册接口不拦截</span></span><br><span class="line">        registry.addInterceptor(loginInterceptor).excludePathPatterns(<span class="string">&quot;/user/login&quot;</span>,<span class="string">&quot;/user/register&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试：</p><p>在postman的请求中添加Authorization将用户登录生成的token输到postman的Authorization中</p><img decoding="async" src="https://pic1.imgdb.cn/item/677d4151d0e0a243d4f17423.png" width="100%"><p>取消Authorization后显示401状态码</p><img decoding="async" src="https://pic1.imgdb.cn/item/677d4180d0e0a243d4f17431.png" width="100%"><p><em><strong>——————————————————————-分割———————————————————————-</strong></em></p><p>学习总结</p><p>端口号和虚拟目录</p><img decoding="async" src="https://pic1.imgdb.cn/item/677d41f4d0e0a243d4f17472.png" width="100%"><p>配置文件 第二种更好</p><img decoding="async" src="https://pic1.imgdb.cn/item/677d4216d0e0a243d4f17481.png" width="80%"><p>配置信息的书写</p><img decoding="async" src="https://pic1.imgdb.cn/item/677d4250d0e0a243d4f17499.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4285d0e0a243d4f174ab.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d429bd0e0a243d4f174bf.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d42bbd0e0a243d4f174d1.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d42ccd0e0a243d4f174dc.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d42ddd0e0a243d4f174e5.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d42edd0e0a243d4f174f2.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4302d0e0a243d4f174f8.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4315d0e0a243d4f17504.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d432ad0e0a243d4f17510.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d48f2d0e0a243d4f177bd.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4905d0e0a243d4f177c2.png" width="80%"><p>打包插件</p><img decoding="async" src="https://pic1.imgdb.cn/item/677d492fd0e0a243d4f177c8.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d495bd0e0a243d4f177dd.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4970d0e0a243d4f177e4.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4983d0e0a243d4f177ea.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4993d0e0a243d4f177f4.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d49aad0e0a243d4f177fb.png" width="50%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d49c6d0e0a243d4f17801.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d49e0d0e0a243d4f1780e.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d49f0d0e0a243d4f17813.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4a0bd0e0a243d4f1781f.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4a23d0e0a243d4f1782a.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4a34d0e0a243d4f17830.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4a5bd0e0a243d4f17845.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4a67d0e0a243d4f17849.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4a94d0e0a243d4f17858.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4ab6d0e0a243d4f17869.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4acbd0e0a243d4f17873.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4adcd0e0a243d4f17877.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4b03d0e0a243d4f1788a.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4b0ed0e0a243d4f17894.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4b2ad0e0a243d4f178a0.png" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4b37d0e0a243d4f178a9.jpg" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4b48d0e0a243d4f178b1.jpg" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4b5cd0e0a243d4f178ba.jpg" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4b69d0e0a243d4f178be.jpg" width="80%"><img decoding="async" src="https://pic1.imgdb.cn/item/677d4b69d0e0a243d4f178be.jpg" width="80%">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo d更新博客失败解决</title>
      <link href="/2024/09/09/hexo-d%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3/"/>
      <url>/2024/09/09/hexo-d%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-d-更新失败解决"><a href="#hexo-d-更新失败解决" class="headerlink" title="hexo -d 更新失败解决"></a>hexo -d 更新失败解决</h1><p><strong>更新Windows系统，更换系统盘，导致本地git环境发生变换（如果需要更换系统盘，必须备份系统环境）</strong></p><p><strong>git环境失效后，需要重新配置git，配置对应的blog项目</strong></p><p>试了好几种网上的方法解决。这里总结终极解决办法！</p><p>获取git 的ssh秘钥</p><img decoding="async" src="https://pic.imgdb.cn/item/66f0270df21886ccc0be0887.png" width="100%"><p>然后去github重新配置ssh秘钥</p><img decoding="async" src="https://pic.imgdb.cn/item/66f0262ef21886ccc0bd01eb.png" width="100%"><p><strong>第三步删除blog下面的.deploy文件夹</strong></p><img decoding="async" src="https://pic.imgdb.cn/item/66f028f1f21886ccc0c01f29.png" width="100%"><p>hexo g<br>hexo d</p><p>就解决了项目更新问题了！</p><p>部分步骤参考<a href="https://blog.csdn.net/yesyesyes_yes/article/details/141783006?spm=1001.2014.3001.5506">hexo d 报错-CSDN博客</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo编写文章教程</title>
      <link href="/2024/08/14/Hexo%E7%BC%96%E5%86%99%E6%96%87%E7%AB%A0%E6%95%99%E7%A8%8B/"/>
      <url>/2024/08/14/Hexo%E7%BC%96%E5%86%99%E6%96%87%E7%AB%A0%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>Markdown可以理解为了一种轻量级HTML标记语言，帮助我们轻松的进行文章排版。</li><li>缩写是.md，是比较常用的。</li></ul><p>在hexo博客框架下创建自己的文章。（<em>Hexo</em>是一个快速,简洁高效的博客框架）。</p><h2 id="1-下载typora"><a href="#1-下载typora" class="headerlink" title="1.下载typora"></a>1.下载typora</h2><p>（typora非常适合用来编写轻量级的html，用来编写hexo下的文章再合适不过了）</p><h4 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h4><p>Typora中文官网：<code>https://typoraio.cn/</code></p><p>安装激活教程参考<a href="http://t.csdnimg.cn/1MLk0">http://t.csdnimg.cn/1MLk0</a></p><h2 id="2-新建文章"><a href="#2-新建文章" class="headerlink" title="2.新建文章"></a>2.新建文章</h2><p><em>输入命令：hexo new “文章名称”</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new “文章名称”</span><br></pre></td></tr></table></figure><img decoding="async" src="https://gitee.com/xiexieya233/xiexieya_images/raw/master/images_hexo/t1.png" width="100%"><h2 id="3-编写内容"><a href="#3-编写内容" class="headerlink" title="3.编写内容"></a>3.编写内容</h2><p>在typora里面编写内容，注意看下面的图解！</p><p><strong>特别要注意的是要光标回车到下面！！！！</strong></p><img decoding="async" src="https://gitee.com/xiexieya233/xiexieya_images/raw/master/images_hexo/t2.png" width="100%"><img decoding="async" src="https://gitee.com/xiexieya233/xiexieya_images/raw/master/images_hexo/t3.png" width="100%"><img decoding="async" src="https://gitee.com/xiexieya233/xiexieya_images/raw/master/images_hexo/t4.png" width="100%"><h2 id="4-编写md语法的使用"><a href="#4-编写md语法的使用" class="headerlink" title="4.编写md语法的使用"></a>4.编写md语法的使用</h2><p>参看<a href="https://blog.csdn.net/weixin_45894702/article/details/128766777?spm=1001.2014.3001.5506">学习现代化的文章编写方式——关于Markdown语法的使用_md 代码块-CSDN博客</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>“测试”</title>
      <link href="/2024/07/11/%E2%80%9C%E6%B5%8B%E8%AF%95%E2%80%9D/"/>
      <url>/2024/07/11/%E2%80%9C%E6%B5%8B%E8%AF%95%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<h1 id="测试测试测试"><a href="#测试测试测试" class="headerlink" title="测试测试测试"></a>测试测试测试</h1><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p><em>123321</em></p><h2 id="Quick-start"><a href="#Quick-start" class="headerlink" title="Quick start"></a>Quick start</h2><h3 id="create-a-new-post"><a href="#create-a-new-post" class="headerlink" title="create a new post"></a>create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>“个人博客网站创建教程”</title>
      <link href="/2024/07/11/%E2%80%9C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E5%88%9B%E5%BB%BA%E6%95%99%E7%A8%8B%E2%80%9D/"/>
      <url>/2024/07/11/%E2%80%9C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E5%88%9B%E5%BB%BA%E6%95%99%E7%A8%8B%E2%80%9D/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/11/hello-world/"/>
      <url>/2024/07/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
